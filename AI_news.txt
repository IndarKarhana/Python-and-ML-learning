Modeling Human Irrationality to Enable Better AI Collaboration - https://news.mit.edu/2024/building-better-ai-helper-starts-with-modeling-irrational-behavior-0419
Researchers developed a method to model the bounded rationality of human or AI agents by inferring their "inference budget" - how much planning they do given computational constraints. Observing prior actions, the model can predict future suboptimal yet rational behavior. It outperformed other techniques on tasks like predicting chess moves. This could help AI systems better understand and collaborate with humans with bounded rationality.

The RAG Effect: AI's Relevance and Accuracy Surge - https://www.forbes.com/sites/forbesbusinesscouncil/2024/04/24/the-rag-effect-how-ai-is-becoming-more-relevant-and-accurate/?sh=75bb024f1f94
AI's evolution brings powerful language models, but struggles with domain knowledge and real-time data. Retrieval Augmented Generation (RAG) integrates proprietary and internet data, transforming how organizations utilize information. RAG's combination of retriever and generator enhances accuracy, mitigates biases, tailors responses, and adapts to live data, revolutionizing AI applications across industries.

Mixed Results in Gen AI Experiment for Small Businesses' Growth - https://newsroom.haas.berkeley.edu/research/gen-ai-experiment-shows-mixed-results-in-helping-small-businesses-grow/
Generative AI aids high performers but hinders struggling entrepreneurs in Kenya study. Successful ones gain 15% boost, while low performers face 8% revenue drop. Task selection crucial: simpler tasks benefit, complex tasks worsen. Research highlights potential impact variation based on tasks chosen for AI assistance.

Weighing Risks and Benefits of Personalizing LLMs - https://techxplore.com/news/2024-04-personalization-potential-democratize-llms.html
Personalizing large language models could democratize whose views shape the AI by increasing inclusivity. Potential benefits include formatting tailored to user preferences and greater productivity. However, risks highlighted by researchers include privacy violations, over-attachment, worsening digital divides, societal polarization into echo chambers, and enabling sophisticated disinformation campaigns. They urge proactively addressing these potential downsides as personalization capabilities rapidly develop.

US AIrforce confirms first successful AI dogfight - https://www.theverge.com/2024/4/18/24133870/us-air-force-ai-dogfight-test-x-62a?ref=futuretools.io
In a milestone for AI in aviation, the US Air Force has confirmed the first successful dogfight between an AI-controlled jet and a human pilot. As part of DARPA's ACE program, an unmanned X-62A aircraft autonomously fought an F-16 last September, demonstrating maneuvers like high-speed close passes. While pilots could disable the AI for safety, they didn't need to intervene during the test dogfight.

AI Trash Analytics Combats Staggering Food Waste - https://www.businessinsider.com/ai-garbage-food-waste-2024-4?ref=futuretools.io
AI analyzes discards at eateries and stores, helping adjust inventory and portion sizes to combat food waste. This tech approach aims to cut the staggering 30-40% of uneaten food in the U.S., reducing costs and environmental impact. It addresses the challenge of discarded food in landfills amid a growing global population.

Secure Machine Learning Chip Safeguards User Data on Smartphones - https://news.mit.edu/2024/tiny-chip-safeguards-user-data-while-enabling-efficient-computing-0423
MIT researchers created a machine learning accelerator chip resistant to hacking attacks, allowing large AI models to run securely on smartphones. It protects sensitive user data like health records with minimal impact on computation accuracy and efficiency. The chip enables privacy-preserving yet powerful mobile AI applications like health monitoring and augmented reality.

import pandas as pd
import plotly.graph_objects as go
from ipywidgets import interact, widgets

# Sample data
data = {
    'sp_id': ['A', 'A', 'A', 'A', 'A', 'B', 'B', 'B', 'B', 'B', 'C', 'C', 'C', 'C', 'C', 'D', 'D', 'D', 'D', 'D'],
    'usg': [10, 12, 15, 17, 20, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35],
    'day': [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5]
}
df_main = pd.DataFrame(data)

# Create an interactive plot
def plot_usg(df, selected_sp_ids, selected_days):
    fig = go.Figure()
    for sp_id in selected_sp_ids:
        df_sp = df[(df['sp_id'] == sp_id) & (df['day'].between(selected_days[0], selected_days[1]))]
        if sp_id == 'A':
            mean_A = df_sp['usg'].mean()
            std_A = df_sp['usg'].std()
            df_sp['usg'] = (df_sp['usg'] - mean_A) / std_A
            sp_id = 'A_normalized'
        elif sp_id == 'B':
            mean_B = df_sp['usg'].mean()
            std_B = df_sp['usg'].std()
        elif sp_id == 'A_normalized':
            df_sp['usg'] = df_sp['usg'] * std_B + mean_B
        fig.add_trace(go.Scatter(x=df_sp['day'], y=df_sp['usg'], mode='lines', name=sp_id))
    
    fig.update_layout(title='Usage by sp_id',
                      xaxis_title='Day',
                      yaxis_title='Usage')

    fig.show()

# Create interactive widgets for selecting sp_id and day range
sp_id_widget = widgets.SelectMultiple(
    options=['A', 'B'],
    value=['A', 'B'],
    description='sp_id:',
    disabled=False
)

day_range_widget = widgets.IntRangeSlider(
    value=[1, 5],
    min=1,
    max=5,
    step=1,
    description='Day Range:',
    disabled=False,
    continuous_update=False,
    orientation='horizontal',
    readout=True,
    readout_format='d'
)

# Create interactive plot
interact(plot_usg, df=widgets.fixed(df_main), selected_sp_ids=sp_id_widget, selected_days=day_range_widget)


